<!-- ---
async function obtenerRepositoriosYCommits() {
  try {
    const contentGithub = await fetch(
      "https://api.github.com/users/Deyverson1/repos",
    ).then((res) => {
      if (!res.ok) {
        throw new Error("Hubo un problema al obtener los repositorios.");
      }
      return res.json();
    });

    const repositoriosOrdenados = await Promise.all(
      contentGithub.map(async (repo: { name: string }) => {
        const commitsUrl = `https://api.github.com/repos/Deyverson1/${repo.name}/commits`;
        const commitsResponse = await fetch(commitsUrl);

        if (!commitsResponse.ok) {
          throw new Error(
            `Hubo un problema al obtener los commits de ${repo.name}.`,
          );
        }

        const commits = await commitsResponse.json();
        const fechaUltimoCommit = commits[0].commit.author.date;
        return { repo: repo.name, fechaUltimoCommit };
      }),
    );

    repositoriosOrdenados.sort(
      (a, b) =>
        new Date(b.fechaUltimoCommit).getTime() -
        new Date(a.fechaUltimoCommit).getTime(),
    );

    const cincoRepositoriosMasRecientes = repositoriosOrdenados.slice(0, 5);
    console.log(cincoRepositoriosMasRecientes);
    const latestCommits = cincoRepositoriosMasRecientes.map((repo) =>
      fetch(
        `https://api.github.com/repos/Deyverson1/${repo.repo}/commits`,
      ).then((res) => {
        if (!res.ok) {
          throw new Error("Error con el fetching de Datos Repo");
        }
        return res.json();
      }),
    );
    // const commits = latestCommits.map((commits)) => (
    //   console.log(commits)
    // )
    console.log(latestCommits);
    console.log(
      "Los 5 repositorios mÃ¡s recientes:",
      cincoRepositoriosMasRecientes.map((repo) => repo.repo),
    );
  } catch (error) {
    console.error("Error:", error.message);
  }
}

obtenerRepositoriosYCommits();
---

<!-- <section>
  <h1>Hola</h1>
  {
    contentGithub.map((content: unknown) => {
      return(
        <div class="text-white">
          <p>{content.name}</p>
          {content.pushed_at}
          </div>
        )
    })
  }
</section> --> 
